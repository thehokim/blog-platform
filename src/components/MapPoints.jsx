import React, { useState, useEffect } from "react";
import { GoogleMap, LoadScript, Marker } from "@react-google-maps/api";
import { useTranslation } from "react-i18next";
import { FiTrash } from "react-icons/fi";

const MapPoints = ({ mapPoints, setMapPoints }) => {
  const { t } = useTranslation();
  const defaultCenter = { lat: 41.2995, lng: 69.2401 };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —á–∏—Å–ª–∞
  const validMapPoints = Array.isArray(mapPoints)
    ? mapPoints
        .filter((point) => point && point.latitude && point.longitude)
        .map((point) => ({
          lat: parseFloat(point.latitude),
          lng: parseFloat(point.longitude),
        }))
    : [];

  // –¶–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã
  const [currentPosition, setCurrentPosition] = useState(defaultCenter);
  const [mapKey, setMapKey] = useState(0); // –î–ª—è —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–∞—Ä—Ç—ã

  useEffect(() => {
    if (validMapPoints.length > 0) {
      setCurrentPosition(validMapPoints[validMapPoints.length - 1]);
      setMapKey((prevKey) => prevKey + 1); // –§–æ—Ä—Å–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É –∫–∞—Ä—Ç—ã
    }
  }, [mapPoints]);

  // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–∫–∏
  const handleMapClick = (event) => {
    const latitude = event.latLng.lat();
    const longitude = event.latLng.lng();
    const newPoint = { latitude, longitude };

    console.log("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –º–µ—Ç–∫–∞:", newPoint);

    // setMapPoints((prev) => [...prev, newPoint]);
    setMapPoints((prevMarkers) => [
      ...prevMarkers,
      {
        lat: event.latLng.lat(),
        lng: event.latLng.lng(),
      },
    ]);
  };

  // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –º–µ—Ç–∫–∏
  const clearMarkers = () => {
    console.log("‚ö†Ô∏è –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –º–µ—Ç–æ–∫");
    setMapPoints([]);
  };
  // console.log(mapPoints)
  return (
    <div className="mb-4 bg-white border border-gray-200 dark:border-gray-600 dark:bg-gray-800 rounded-lg p-4">
      {/* –ü—Ä–æ–≤–µ—Ä–∫–∞ API-–∫–ª—é—á–∞ */}
      <LoadScript
        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ""}
      >
        <GoogleMap
          key={mapKey} // üî• –î–æ–±–∞–≤–∏–ª–∏ –∫–ª—é—á, —á—Ç–æ–±—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å –∫–∞—Ä—Ç—É
          mapContainerStyle={{
            width: "100%",
            height: "400px",
            borderRadius: "0.5rem",
            overflow: "hidden",
          }}
          center={currentPosition}
          zoom={12}
          onClick={handleMapClick}
        >
          {/* –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–µ—Ç–æ–∫ */}
          {validMapPoints.map((point, index) => (
            <Marker key={index} position={point} />
          ))}
        </GoogleMap>
      </LoadScript>

      {/* –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –º–µ—Ç–æ–∫ */}
      {validMapPoints.length > 0 ? (
        <button
          onClick={clearMarkers}
          className="mt-4 px-5 py-3 flex items-center justify-center gap-2 text-sm font-medium bg-red-600 text-white rounded-lg hover:bg-red-700 transition-all duration-300 transform hover:scale-105"
        >
          <FiTrash className="w-5 h-5" />
          {t("–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –º–µ—Ç–∫–∏")}
        </button>
      ) : (
        <p className="mt-4 text-center text-gray-500 dark:text-gray-400">
          {t("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–∫—É.")}
        </p>
      )}
    </div>
  );
};

export default MapPoints;
